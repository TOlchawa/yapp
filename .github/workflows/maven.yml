# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: PROD
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Run server unit tests with coverage
      run: mvn -B -pl server -am test
    - name: Summarize coverage
      run: |
        FILE=server/target/site/jacoco/jacoco.xml
        if [ -f "$FILE" ]; then
          LINE=$(grep -o '<counter type="LINE"[^/]*/>' "$FILE" | head -n 1)
          MISSED=$(echo "$LINE" | grep -o 'missed="[0-9]\+' | cut -d'"' -f2)
          COVERED=$(echo "$LINE" | grep -o 'covered="[0-9]\+' | cut -d'"' -f2)
          TOTAL=$((MISSED + COVERED))
          if [ "$TOTAL" -gt 0 ]; then
            PCT=$((100 * COVERED / TOTAL))
          else
            PCT=0
          fi
          echo "Line coverage: $PCT%" | tee coverage-summary.txt
          echo '## Coverage' >> $GITHUB_STEP_SUMMARY
          echo "Line coverage: $PCT%" >> $GITHUB_STEP_SUMMARY
        else
          echo 'Coverage file not found'
        fi
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: server-coverage-report
        path: server/target/site/jacoco

  e2e-tests:
    runs-on: ubuntu-latest
    environment: PROD
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: qazxsw123
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build and start the Server
        run: |
          cd server
          mvn clean package spring-boot:repackage
          java -jar target/server-1.0-SNAPSHOT.jar  2>&1 | tee server-output.log &
          sleep 10 # Wait for the application to start
          cat server-output.log || echo "No log file found"

      - name: Check Running Processes
        run: |
          echo "Checking open ports..."
          netstat -tulnp | grep java || echo "No Java process found"

      - name: Checking version of server
        run: |
          echo "Checking version of server..."
          echo "-- GET --"
          curl -v -u "admin:admin" http://localhost:9090/version
          echo "-- POST --"
          curl -v -X POST http://localhost:9090/ping -u admin:admin -H "Content-Type: application/x-www-form-urlencoded" --data-urlencode "ping=pong"
  

      - name: Start E2E the Server tests
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: qazxsw123
        run: |
          cd server
          mvn test -Dtest=*IT

